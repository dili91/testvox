name: Workflow on main branch

on:
  push:
    branches:
      - 'main'
    tags-ignore:
      - '**'

jobs:
  build_lint_test:
    uses: ./.github/workflows/build-lint-test.yml
    with:
      checkout_ref: ${{ github.ref }}
  check_crate_version_availability:
    uses: ./.github/workflows/check-crate-version-availability.yml
    with:
      checkout_ref: ${{ github.ref }}
  e2e_tests:
    uses: ./.github/workflows/e2e-tests.yml
    with:
      checkout_ref: ${{ github.ref }}
    secrets:
      slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL}}
  get_project_version:
    name: Retrieve version info from Cargo.toml
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_project_version.outputs.version }}
    steps:
      - name: Install Just
        run: sudo snap install --edge --classic just
      - uses: actions/checkout@v4
      - name: "Get project version"
        id: get_project_version
        run: |
          version=$(just get-project-version)
          echo "VERSION=$version" >> $GITHUB_OUTPUT
  release_github:
    name: Release on Github
    runs-on: ubuntu-latest
    needs: [build_lint_test, check_crate_version_availability, get_project_version]
    steps:
      - uses: actions/checkout@v4
      - name: Create tag
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ needs.get_project_version.outputs.version }}
          tag_prefix: 'v'
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name:  ${{ steps.create_tag.outputs.new_tag }}
          generate_release_notes: true
  release_docker:
    name: Release on Dockerhub
    runs-on: ubuntu-latest
    needs: [build_lint_test, check_crate_version_availability, get_project_version]
    permissions:
      id-token: write
      attestations: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: adilisio/testvox:${{ needs.get_project_version.outputs.version }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: index.docker.io/adilisio/testvox
          subject-digest: ${{ steps.push.outputs.digest }}
  release_crates_io:
    name: Release on Crates.io
    runs-on: ubuntu-latest
    needs: [build_lint_test, check_crate_version_availability, get_project_version]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Publish
        run: cargo publish --token=${{ secrets.CARGO_REGISTRY_TOKEN }}